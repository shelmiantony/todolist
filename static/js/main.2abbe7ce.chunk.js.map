{"version":3,"sources":["Listitem.js","App.js","reportWebVitals.js","index.js"],"names":["Listitem","props","listItems","items","map","item","className","type","id","key","value","text","onChange","e","setUpdate","target","icon","onClick","deleteItem","duration","easing","library","add","faTrash","App","handleKeyPress","console","log","preventDefault","newItem","state","currentItem","newItems","setState","handleInput","bind","this","Date","now","filterItems","filter","onKeyPress","placeholder","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mSAwCeA,MA/Bf,SAAkBC,GACd,IACMC,EADQD,EAAME,MACIC,KAAK,SAAAC,GACzB,OAAO,qBAAKC,UAAY,OAAjB,SACH,8BACI,uBAAOC,KAAK,OACRC,GAAIH,EAAKI,IACTC,MAAOL,EAAKM,KACZC,SACI,SAACC,GACGZ,EAAMa,UAAUD,EAAEE,OAAOL,MAAML,EAAKI,QAKhD,+BACI,cAAC,IAAD,CAAiBH,UAAU,UAAUU,KAAK,QAC1CC,QAAW,kBAAMhB,EAAMiB,WAAWb,EAAKI,cAdfJ,EAAKI,QAoB7C,OACI,8BACI,cAAC,IAAD,CAAUU,SAAY,IAAKC,OAAS,cAApC,SAAmDlB,O,uBC3B/DmB,IAAQC,IAAIC,KAGL,IAmHQC,EAnHf,kDACE,WAAYvB,GAAO,IAAD,8BAChB,cAAMA,IA2CRwB,eAAiB,SAACZ,GAEhB,GAAa,UAAVA,EAAEJ,IAAgB,CACnBiB,QAAQC,IAAI,sBACZd,EAAEe,iBACJ,IAAMC,EAAU,EAAKC,MAAMC,YAG3B,GAFAL,QAAQC,IAAIE,GAEM,KAAfA,EAAQlB,KAAU,CACnB,IAAMqB,EAAS,GAAD,mBAAM,EAAKF,MAAM3B,OAAjB,CAAuB0B,IACrC,EAAKI,SAAS,CACZ9B,MAAM6B,EACND,YAAY,CACVpB,KAAK,GACLF,IAAI,SAxDV,EAAKqB,MAAM,CACT3B,MAAM,GACN4B,YAAY,CACVpB,KAAK,GACLF,IAAI,KAGR,EAAKyB,YAAc,EAAKA,YAAYC,KAAjB,gBAEnB,EAAKjB,WAAa,EAAKA,WAAWiB,KAAhB,gBAClB,EAAKrB,UAAY,EAAKA,UAAUqB,KAAf,gBACjB,EAAKV,eAAiB,EAAKA,eAAeU,KAApB,gBAbN,EADpB,+CAiBE,SAAYtB,GACVuB,KAAKH,SAAS,CACZF,YAAY,CACVpB,KAAME,EAAEE,OAAOL,MACfD,IAAI4B,KAAKC,WArBjB,wBAoEE,SAAY7B,GACV,IAAM8B,EAAcH,KAAKN,MAAM3B,MAAMqC,QAAO,SAAAnC,GAAI,OAC9CA,EAAKI,MAAMA,KACX2B,KAAKH,SAAS,CACZ9B,MAAMoC,MAxEd,uBA4EE,SAAU5B,EAAKF,GACb,IAAMN,EAAQiC,KAAKN,MAAM3B,MACzBA,EAAMC,KAAI,SAAAC,GACLA,EAAKI,MAAMA,IACZJ,EAAKM,KAAKA,MAGdyB,KAAKH,SAAS,CACZ9B,MAAMA,MApFZ,oBA2FE,WACE,OACE,sBAAKG,UAAU,MAAf,UACE,mCACA,+CAEE,sBAAME,GAAG,aAAciC,WAAYL,KAAKX,eAAxC,SACE,uBAAOlB,KAAK,OAAOmC,YAAY,aAC/BhC,MAAO0B,KAAKN,MAAMC,YAAYpB,KAAMC,SAAUwB,KAAKF,mBAKvD,cAAC,EAAD,CAAU/B,MAASiC,KAAKN,MAAM3B,MAC9Be,WAAckB,KAAKlB,WACnBJ,UAAasB,KAAKtB,mBA1G1B,GAAyB6B,aCEVC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2abbe7ce.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Listitem.css'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport FlipMove from 'react-flip-move';\r\n\r\n\r\n\r\n\r\n\r\nfunction Listitem(props) {\r\n    const items = props.items;\r\n    const listItems = items.map( item =>{\r\n        return <div className = \"list\" key={item.key}>\r\n            <p>\r\n                <input type=\"text\" \r\n                    id={item.key} \r\n                    value={item.text}\r\n                    onChange = {\r\n                        (e) =>{\r\n                            props.setUpdate(e.target.value,item.key)\r\n                        }\r\n                    }\r\n                />\r\n              \r\n                <span>\r\n                    <FontAwesomeIcon className=\"faicons\" icon=\"trash\"\r\n                    onClick= { () => props.deleteItem(item.key)}/>\r\n                </span>\r\n            </p>\r\n            \r\n        </div>\r\n    })\r\n    return (\r\n        <div>\r\n            <FlipMove duration = {500} easing = \"ease-in-out\">{listItems}</FlipMove>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Listitem;\r\n","import React, { Component } from 'react'\nimport Listitem from './Listitem';\nimport './App.css';\nimport {library} from '@fortawesome/fontawesome-svg-core';\nimport {faTrash} from '@fortawesome/free-solid-svg-icons';\n\n\nlibrary.add(faTrash);\n\n\nexport class App extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      items:[],\n      currentItem:{\n        text:'',\n        key:''\n      }\n    }\n    this.handleInput = this.handleInput.bind(this);\n    // this.addItem = this.addItem.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.setUpdate = this.setUpdate.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this)\n  }\n\n  handleInput(e){\n    this.setState({\n      currentItem:{\n        text: e.target.value,\n        key:Date.now()\n      }\n    })\n  }\n\n  // addItem(e){\n  //   e.preventDefault();\n  //   const newItem = this.state.currentItem;\n  //   console.log(newItem);\n\n  //   if(newItem.text!==\"\"){\n  //     const newItems= [...this.state.items,newItem];\n  //     this.setState({\n  //       items:newItems,\n  //       currentItem:{\n  //         text:'',\n  //         key:''\n  //       }\n  //     })\n\n\n  //   }\n  // }\n\n  handleKeyPress = (e) => {\n  \n    if(e.key === 'Enter'){\n      console.log('enter press here! ')\n      e.preventDefault();\n    const newItem = this.state.currentItem;\n    console.log(newItem);\n\n    if(newItem.text!==\"\"){\n      const newItems= [...this.state.items,newItem];\n      this.setState({\n        items:newItems,\n        currentItem:{\n          text:'',\n          key:''\n        }\n      })\n\n\n    }\n    }\n  }\n\n  deleteItem (key){\n    const filterItems = this.state.items.filter(item =>\n      item.key!==key);\n      this.setState({\n        items:filterItems\n      })\n  } \n\n  setUpdate(text,key){\n    const items = this.state.items\n    items.map(item =>{\n      if(item.key===key){\n        item.text=text;\n      }\n    })\n    this.setState({\n      items:items\n    })\n\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n        <h2 >My To Do List</h2>\n        {/* <form id=\"to-do-form\"  onSubmit={this.addItem} > */}\n          <form id=\"to-do-form\"  onKeyPress={this.handleKeyPress} >\n            <input type=\"text\" placeholder=\"Enter text\"\n            value={this.state.currentItem.text} onChange={this.handleInput}\n            />\n            {/* <button type=\"submit\">Add</button> */}\n          </form>\n        </header>\n        <Listitem items = {this.state.items}\n        deleteItem = {this.deleteItem}\n        setUpdate = {this.setUpdate}\n        />\n        </div>\n      \n    )\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}